% Path information
clear all
Home = getenv('HOME');
repo_path = sprintf('%s/repos',Home);
dropbox_path = sprintf('%s/Dropbox',Home);
addpath(sprintf('%s/repos/pointbem',Home));
addpath(sprintf('%s/repos/panelbem',Home));
addpath(sprintf('%s/repos/testasymmetry',Home));
addpath(sprintf('%s/repos/testasymmetry/functions',Home));
addpath(sprintf('%s/repos/testasymmetry/mobley',Home));
addpath(sprintf('%s/repos/testasymmetry/mobley/slic-COSMO',Home));
addpath(sprintf('%s/repos/testasymmetry/mobley/slic-COSMO/tests',Home));
addpath(sprintf('%s/repos/testasymmetry/born',Home));

% a bunch of useful variables and constants. also defining the global
% variable "ProblemSet" which we'll use to hold the BEM systems.
loadConstants
convertKJtoKcal = 1/joulesPerCalorie;
global UsefulConstants ProblemSet saveMemory writeLogfile logfileName
logfileName = 'water.out';
epsOut = 78.36;
allData = readtable('../../all_Bondii_data.csv');

x0_1 = [ 7.59272303e-01  -1.48041126e+01  -9.07850313e-01 ...
-1.01335303e+00  -9.43021712e-02 3.30112337e+04 ...
 2.11254570e+04 2.89471409e+04 5.17703550e+04 ...
 2.07476711e+04 3.45306018e+03 9.37626454e+01 ...
 3.89377283e+04 1.04910649e+04 2.96854638e+04 ...
 3.52235363e+04 1.23872016e+04 5.79428593e+03 ...
 1.89677659e+04 2.22414405e+04 1.06188603e+04 ...
 3.03455196e+04 4.15977014e-01 2.30713479e-01 ...
 2.13851561e-01 8.23612082e-02 3.32570617e-01 ...
 1.48849655e-01 1.43932512e-01 3.48851460e-01 ...
 7.40718228e-01 4.29639494e-01 3.47204815e-01 ...
 9.32442652e-01 7.41383798e-02 5.43073135e+00 ...
 1.58467915e+00 5] ;

x0_2 = [ 6.42483311e-01  -5.40760618e+01  -3.09027827e+00 ...
-1.00939954e+00  -9.69180508e-02 3.65003997e+04 ...
 2.13444458e+04 2.98793947e+04 5.34914726e+04 ...
 2.17863266e+04 3.84857653e+03 9.07127303e+01 ...
 4.05255073e+04 1.12977261e+04 3.11056857e+04 ...
 3.98073927e+04 1.15156476e+04 6.44594207e+03 ...
 1.90910690e+04 2.00414400e+04 2.45868362e+04 ...
 3.34322580e+04 4.42416837e-01 5.91112413e-01 ...
 4.17835181e-01 2.68051482e-02 5.25618817e-01 ...
 2.53475268e-01 2.43789981e-01 3.56329783e-01 ...
 8.85402538e-01 7.15783073e-01 2.12828407e-01 ...
 6.43690734e-01 2.85377315e-02 8.34632302e-01 ...
 1.38843863e+00 4] ;

x0_3 = [ 9.52069176e-01  -2.20966233e+01  -1.17077171e+00 ...
-1.18572493e+00  -9.93904389e-02 4.05927405e+04 ...
 2.60864451e+04 2.93326207e+04 5.24726546e+04 ...
 2.51849421e+04 5.88183796e+03 7.38220660e+01 ...
 5.97982507e+04 1.01575007e+04 4.28095475e+04 ...
 3.74096649e+04 1.00946811e+04 1.24649959e+04 ...
 1.72255876e+04 1.28933868e+04 4.30572898e+04 ...
 4.19114929e+04 4.88284710e-01 4.67515982e-01 ...
 3.51095055e-01 2.73917771e-01 2.60466277e-01 ...
 2.47018451e-01 2.35810582e-01 3.35681505e-01 ...
 7.58245429e-01 4.07774126e-01 2.50260131e-01 ...
 7.36187436e-01 3.61226585e-02 6.24314281e+00 ...
 1.36163042e+00 5];

x0_4 =  [ 6.97070587e-01 -3.84248734e+01 -2.36441689e+00 ...
  -9.41869306e-01 -9.88796231e-02  3.49752555e+04 ...
   2.64308339e+04  2.91354656e+04  4.81974626e+04 ...
   2.22309896e+04  5.49596091e+03  2.11745817e+02 ...
   4.18691371e+04  1.61115635e+04  3.60976430e+04 ...
   3.64444520e+04  1.31632167e+04  1.23379529e+04 ...
   1.59436524e+04  1.63370401e+04  3.65652978e+04 ...
   4.39647918e+04  3.53278183e-01  0.00000000e+00 ...
   0.00000000e+00  0.00000000e+00  0.00000000e+00 ...
   0.00000000e+00  0.00000000e+00  0.00000000e+00 ...
   0.00000000e+00  0.00000000e+00  0.00000000e+00 ...
   0.00000000e+00  0.00000000e+00  6.11346003e+00 ...
   2.17207395e+00 2] ;
x0_5 = [ 6.97070587e-01 -3.84248734e+01 -2.36441689e+00 ...
  -9.41869306e-01 -9.88796231e-02  3.49752555e+04 ...
   2.64308339e+04  2.91354656e+04  4.81974626e+04 ...
   2.22309896e+04  5.49596091e+03  2.11745817e+02 ...
   4.18691371e+04  1.61115635e+04  3.60976430e+04 ...
   3.64444520e+04  1.31632167e+04  1.23379529e+04 ...
   1.59436524e+04  1.63370401e+04  3.65652978e+04 ...
   4.39647918e+04  3.53278183e-01  0.00000000e+00 ...
   0.00000000e+00  0.00000000e+00  0.00000000e+00 ...
   0.00000000e+00  0.00000000e+00  0.00000000e+00 ...
   0.00000000e+00  0.00000000e+00  0.00000000e+00 ...
   0.00000000e+00  0.00000000e+00  1.14454713e+01 ...
   2.32072761e+00 2] ;
x0_6 = [ 6.92285394e-01 -1.10381269e+01 -1.20690014e+00 ...
  -8.19507753e-01 -9.75649346e-02  3.49752555e+04 ...
   2.64308339e+04  2.91354656e+04  4.81974626e+04 ...
   2.22309896e+04  5.49596091e+03  2.11745817e+02 ...
   4.18691371e+04  1.61115635e+04  3.60976430e+04 ...
   3.64444520e+04  1.31632167e+04  1.23379529e+04 ...
   1.59436524e+04  1.63370401e+04  3.65652978e+04 ...
   4.39647918e+04  3.53278183e-01  0.00000000e+00 ...
   0.00000000e+00  0.00000000e+00  0.00000000e+00 ...
   0.00000000e+00  0.00000000e+00  0.00000000e+00 ...
   0.00000000e+00  0.00000000e+00  0.00000000e+00 ...
   0.00000000e+00  0.00000000e+00  9.06426183e+00 ...
  2.32072761e+00 2];

 
x0=x0_1;
hb_grp = x0(end);
x = x0(1:37);
mol_list = allData.solute;
dG_list = allData.dG_expt;

saveMemory = 1;
writeLogfile = 1;
epsIn  =  1;
Tbase = 300; mytemp=Tbase;

KelvinOffset = 273.15;
conv_factor = 332.112;
staticpotential = 0.0; % this only affects charged molecules;

kappa = 0.0;  % should be zero, meaning non-ionic solutions!
UsefulConstants = struct('epsIn',epsIn,'epsOut',epsOut,'kappa', ...
			 kappa,'conv_factor',conv_factor,...
			 'staticpotential',staticpotential);
%COSMO H-bond atom types
allHbondTypes = {'n_amine','n_amide','n_nitro',...
                 'n_other','o_carbonyl','o_ester',...
                 'o_nitro','o_hydroxyl','fluorine',...
                 'h_oh','h_nh','h_other'};
             
training_set  = {'4_bromophenol', 'ethanamide', 'teflurane', '4_chloroaniline',...
            '2_methylpropane', '222_trifluoroethanol', '2_fluorophenol',...
            '2_iodopropane', 'iodobenzene', '1_nitropentane', '3_cyanophenol',...
            'pyridine','4_nitroaniline','14_dioxane','acetic_acid','butan_1_ol',...
            'methyl_acetate','propanone','triethyl_phosphate','trimethyl_phosphate',...
            'methanethiol','dimethyl_sulfate','piperidine','ethylamine','N_methylacetamide',...
            'nitromethane','nonanal','benzaldehyde','methanol',...
            '3_methyl_1h_indole','anthracene','124_trimethylbenzene','2_naphthylamine'...
            ,'4_formylpyridine','cyclohexylamine','dimethyl_sulfide','hex_1_ene',...
            'n_butanethiol','naphthalene','33_dimethylbutan_2_one','333_trimethoxypropionitrile',...
            'chloroethane','diethyl_sulfide','ethene','imidazole',...
            'methyl_octanoate','n_octane','n_propylbenzene',...
            'p_cresol','propanoic_acid','tetrahydropyran','trichloroethene',...
            '2_methoxyaniline','2_methylhexane','2_nitropropane','26_dimethylpyridine',...
            'benzene','but_1_ene','but_1_yne','m_xylene','methane',...
            'n_pentylamine','p_dibromobenzene'};
% here we define the actual params for the NLBC test
solventAreas = allData{495,9:79};
solventATypes = allData{495,80:144};
solventHbData = allData{495,145:end};
solventVdWA = allData{495,11};
solventVdWV = allData{495,12};
temperature = 24.85 + KelvinOffset;
curdir = pwd;



for i=1:length(mol_list)
  dir=sprintf('%s/lab/projects/slic-jctc-mnsol/nlbc-mobley/nlbc_test/%s',dropbox_path,mol_list{i});
  chdir(dir);
  pqrData = loadPqr('test.pqr');
  pqrAll{i} = pqrData;
  srfFile{i} = sprintf('%s/test_2.srf',dir);
  chargeDist{i} = pqrData.q;%chargeDistribution;
  soluteAtomAreas{i} = allData{i,9:79};
  soluteAtomTypes{i} = {allData{i,80:144}};
  soluteHbondData{i} = allData{i,145:end};
  solute_VdWA{i} = allData{i,11};
  solute_VdWV{i} = allData{i,12};
  solventAtomAreas{i} = solventAreas;
  solventAtomTypes{i} = {solventATypes};
  solventHbondData{i} = solventHbData;
  solvent_VdWA{i} = solventVdWA;
  solvent_VdWV{i} = solventVdWV;
  atom_vols{i} = allData{i,14};
  temp{i} = temperature;
  referenceData{i} = dG_list(i);
  newHB{i}=hb_grp;
  chdir(curdir);
  addProblemCosmo(mol_list{i},pqrAll{i},srfFile{i},chargeDist{i},referenceData{i},...
                  soluteAtomAreas{i},soluteAtomTypes{i},soluteHbondData{i},...
                  solute_VdWV{i},solute_VdWA{i},...
                  solventAtomAreas{i},solventAtomTypes{i},solventHbondData{i},...
                  solvent_VdWV{i},solvent_VdWA{i},...
                  atom_vols{i},temp{i},newHB{i});



end
disp_mob = allData.disp_mobley; 
cav_mob = allData.cav_mobley; 
np_mob = allData.np_mobley; 
es_mob = allData.es_mobley; 
np_SLIC = allData.np_SLIC; 
es_SLIC= allData.es_SLIC;
% xNoIonsInParam = [  1.8570  -75.6855   -2.9884    8.7302    0.0113    0.4098];
% xIonsInParam   = [  0.5479 -97.8176 -1.0219 -9.7033 0.0049 2.4240];
% xIonsAndMDStat = [    0.4004  -44.3595   -1.1232   -0.7356    0.0139    2.5034];
% xIonsAnd8Iter  = [   0.6260 -112.0291   -0.9296  -12.1084    0.0037    2.7546];
% 
% x = xIonsAnd8Iter;
[err,calc,ref,es,np,hb,disp,disp_slsl,disp_svsl,disp_svsv,cav,comb]=ObjectiveFromBEMCosmo(x);
rmse = rms(ref-calc);
rmse_np = rms(np_mob-np);
rmse_disp = rms(disp_mob-disp);
rmse_cav = rms(cav_mob-cav);
rmse_es = rms(es_mob-es);
rmse_eshb = rms(es_mob-es-hb);

save('RunCosmo_final_1.mat','mol_list','training_set','x',...
    'err','calc','ref','es','np','hb',...
    'disp','disp_slsl','disp_svsl','disp_svsv','cav','comb',...
    'rmse','rmse_np','rmse_disp','rmse_cav','rmse_es','rmse_eshb',...
    'disp_mob','cav_mob','np_mob','es_mob','np_SLIC','es_SLIC');
